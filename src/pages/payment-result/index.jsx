import React, { useEffect, useState } from "react";
import { toast } from "react-toastify";
import api from "../../configs/axios";
import { useLocation, useNavigate } from "react-router-dom";
import { FaCheckCircle, FaTimesCircle, FaHome, FaHistory } from "react-icons/fa";

const PaymentResultPage = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const [paymentStatus, setPaymentStatus] = useState("loading"); // "loading" | "success" | "fail"
  const [showAction, setShowAction] = useState(false);

  //  H√†m g·ªçi x√°c nh·∫≠n l√™n BE
  const handleVnpayConfirm = async () => {
    const params = new URLSearchParams(location.search);
    const paymentId = params.get("paymentId");
    const planId = params.get("planId");
    const responseCode = params.get("vnp_ResponseCode");

    if (!paymentId || !planId || !responseCode) {
      toast.error("Thi·∫øu th√¥ng tin thanh to√°n!");
      setPaymentStatus("fail");
      setShowAction(true);
      return;
    }

    const statusForApi = responseCode === "00" ? "SUCCESS" : "FAILED";

    try {
      const res = await api.post("/payment/confirm", {
        paymentId,
        planId,
        paymentStatus: statusForApi,
      });
      console.log("üî• Ph·∫£n h·ªìi t·ª´ BE:", res.data);

      if (res.data === "OK") {
        console.log("üì¶ Ph·∫£n h·ªìi x√°c nh·∫≠n:", status);
        toast.success("Thanh to√°n th√†nh c√¥ng!");
        setPaymentStatus("success");
      } else if (res.data.paymentStatus === "PENDING") {
        toast.info("Thanh to√°n ƒëang ch·ªù x·ª≠ l√Ω t·ª´ VNPAY.");
        setPaymentStatus("pending");
      } else {
        toast.error("Thanh to√°n th·∫•t b·∫°i!");
        setPaymentStatus("fail");
      }
      
    } catch (error) {
      console.error("L·ªói x√°c nh·∫≠n thanh to√°n:", error);
      toast.error("Kh√¥ng x√°c nh·∫≠n ƒë∆∞·ª£c ƒë∆°n h√†ng!");
      setPaymentStatus("fail");
    } finally {
      setShowAction(true);
    }
  };

  // G·ªçi x√°c nh·∫≠n khi component mount
  useEffect(() => {
    handleVnpayConfirm();
  }, []);

  return (
    <div className="min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-md mx-auto bg-white rounded-xl shadow-lg overflow-hidden">
        <div
          className={`p-8 ${
            paymentStatus === "success"
              ? "bg-green-50"
              : paymentStatus === "fail"
              ? "bg-red-50"
              : "bg-gray-50"
          }`}
        >
          {paymentStatus === "loading" && (
            <div className="text-center">
              <h2 className="text-2xl font-semibold text-gray-700">ƒêang x√°c nh·∫≠n giao d·ªãch...</h2>
              <p className="mt-4 text-gray-600">Vui l√≤ng ch·ªù trong gi√¢y l√°t.</p>
            </div>
          )}
          {paymentStatus === "success" && (
            <div className="text-center">
              <FaCheckCircle className="mx-auto h-16 w-16 text-green-500 animate-bounce" />
              <h2 className="mt-4 text-3xl font-bold text-green-800">Thanh to√°n th√†nh c√¥ng!</h2>
              <p className="mt-4 text-lg text-gray-800">
                C·∫£m ∆°n b·∫°n ƒë√£ thanh to√°n. B·∫°n c√≥ th·ªÉ v·ªÅ trang ch·ªß ho·∫∑c xem c√°c g√≥i c·ªßa m√¨nh.
              </p>
            </div>
          )}
          {paymentStatus === "fail" && (
            <div className="text-center">
              <FaTimesCircle className="mx-auto h-16 w-16 text-red-500 animate-bounce" />
              <h2 className="mt-4 text-3xl font-bold text-red-800">Thanh to√°n th·∫•t b·∫°i!</h2>
              <div className="mt-6 text-gray-600">Vui l√≤ng th·ª≠ l·∫°i ho·∫∑c li√™n h·ªá h·ªó tr·ª£.</div>
            </div>
          )}
        </div>

        {showAction && (
          <div className="p-6 bg-gray-50 space-y-4">
            <button
              className="w-full flex justify-center items-center px-4 py-3 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700"
              onClick={() => navigate("/")}
            >
              <FaHome className="mr-2" /> V·ªÅ trang ch·ªß
            </button>
            <button
              className="w-full flex justify-center items-center px-4 py-3 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50"
              onClick={() => navigate("/user-package")}
            >
              <FaHistory className="mr-2" /> Xem c√°c g√≥i ƒë√£ mua
            </button>
          </div>
        )}
      </div>
    </div>
  );
};

export default PaymentResultPage;
